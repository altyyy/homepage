{"ast":null,"code":"var _jsxFileName = \"/Users/satoaruto/\\u30AF\\u3099\\u30FC\\u30AF\\u3099\\u30EB\\u30C8\\u3099\\u30E9\\u30A4\\u30D5\\u3099\\uFF08\\u30ED\\u30FC\\u30AB\\u30EB\\uFF09/homepage/homepage/src/components/templetes/introductionType.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// アイテムの型を定義\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction introductionType() {\n  _s();\n  // itemsの型を指定して、useStateを定義\n  const [items, setItems] = useState([]); // データを保存するための状態\n\n  useEffect(() => {\n    // FastAPIサーバーからデータを取得\n    fetch('http://localhost:8000/items/').then(response => response.json()) // JSONとしてパース\n    .then(data => {\n      setItems(data); // 取得したデータを状態にセット\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []); // 初回レンダリング時に1回だけ実行される\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Items from MongoDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(introductionType, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\nexport default introductionType;","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","introductionType","_s","items","setItems","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","_id"],"sources":["/Users/satoaruto/グーグルドライブ（ローカル）/homepage/homepage/src/components/templetes/introductionType.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\n// アイテムの型を定義\ninterface Item {\n  _id: string;  // MongoDBのObjectId（文字列として扱います）\n  name: string;\n  description: string;\n}\n\nfunction introductionType() {\n  // itemsの型を指定して、useStateを定義\n  const [items, setItems] = useState<Item[]>([]);  // データを保存するための状態\n\n  useEffect(() => {\n    // FastAPIサーバーからデータを取得\n    fetch('http://localhost:8000/items/')\n      .then((response) => response.json())  // JSONとしてパース\n      .then((data) => {\n        setItems(data);  // 取得したデータを状態にセット\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);  // 初回レンダリング時に1回だけ実行される\n\n  return (\n    <div className=\"App\">\n      <h1>Items from MongoDB</h1>\n      <ul>\n        {items.map((item) => (\n          <li key={item._id}>{item.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default introductionType;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAGlD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAE;;EAEjDD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAE;IAAA,CACrCF,IAAI,CAAEG,IAAI,IAAK;MACdL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAE;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MAAAc,QAAA,EACGX,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACdpB,OAAA;QAAAc,QAAA,EAAoBM,IAAI,CAACC;MAAI,GAApBD,IAAI,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAxBQD,gBAAgB;AA0BzB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}